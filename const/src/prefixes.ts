export const prefixToObjectMap = {
  act: 'action',
  anly: 'analytics',
  aud: 'audit',
  bak: 'botApiKey',
  bot: 'bot',
  card: 'card',
  cfg: 'configuration',
  chn: 'channel',
  cnv: 'conversation',
  evt: 'event',
  file: 'file',
  flow: 'workflow',
  iak: 'integrationApiKey',
  int: 'integration',
  kb: 'knowledgeBase',
  lmt: 'limit',
  med: 'media',
  msg: 'message',
  node: 'node',
  pat: 'personalAccessToken',
  revt: 'recurringEvent',
  sbx: 'sandbox',
  sch: 'schema',
  ste: 'state',
  tag: 'tag',
  tbl: 'table',
  user: 'user',
  usg: 'usage',
  wbh: 'webhook',
  wks: 'workspace'
} as const

export const objectToPrefixMap: Reverser<typeof prefixToObjectMap> = {
  action: 'act',
  analytics: 'anly',
  audit: 'aud',
  bot: 'bot',
  botApiKey: 'bak',
  card: 'card',
  channel: 'chn',
  configuration: 'cfg',
  conversation: 'cnv',
  event: 'evt',
  file: 'file',
  integration: 'int',
  integrationApiKey: 'iak',
  knowledgeBase: 'kb',
  limit: 'lmt',
  media: 'med',
  message: 'msg',
  node: 'node',
  personalAccessToken: 'pat',
  recurringEvent: 'revt',
  sandbox: 'sbx',
  schema: 'sch',
  state: 'ste',
  table: 'tbl',
  tag: 'tag',
  usage: 'usg',
  user: 'user',
  webhook: 'wbh',
  workflow: 'flow',
  workspace: 'wks',
} as const

export type Prefixes = typeof objectToPrefixMap[keyof typeof objectToPrefixMap]
export type Objects = keyof typeof objectToPrefixMap

type Reverser<T extends Record<PropertyKey, PropertyKey>> = {
  [P in keyof T as T[P]]: P
}
